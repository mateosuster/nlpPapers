data %>%
ggplot(aes(year, mean))+
geom_line()
data %>%
ggplot(aes(year, mean, color = topic))+
geom_line()
data
names(data)
data = read_csv('data/topic_distribution_year.csv', skip = 1) %>%
select(-'...1') %>%
rename(year = '...2', topic = '...3')
data
data %>%
ggplot(aes(year, mean, color = topic))+
geom_line()
data %>%
ggplot(aes(year, mean, color = as.character(topic)))+
geom_line()
library(tidyverse)
library(ggplot2)
data = read_csv('data/topic_distribution_year.csv', skip = 1) %>%
select(-'...1') %>%
mutate( topic = as.character(topic)) %>%
rename(year = '...2', topic = '...3')
data = read_csv('data/topic_distribution_year.csv', skip = 1) %>%
select(-'...1') %>%
mutate( topic = as.character(topic)) %>%
rename(year = '...2', topic = '...3')
data = read_csv('data/topic_distribution_year.csv', skip = 1) %>%
select(-'...1') %>%
rename(year = '...2', topic = '...3')%>%
mutate( topic = as.character(topic))
data %>%
ggplot(aes(year, mean, color = topic))+
geom_line()
library(tidyverse)
library(ggplot2)
data = read_csv('data/topic_distribution_year.csv', skip = 1) %>%
select(-'...1') %>%
rename(year = '...2', topic = '...3')%>%
mutate( topic = as.character(topic))
data %>%
ggplot(aes(year, mean, color = topic))+
geom_line()
data %>%
ggplot(aes(year, median, color = topic))+
geom_line()
data %>%
ggplot(aes(year, count, color = topic))+
geom_line()
data <- read.csv("data\data_clean.csv")
data <- read.csv("data/data_clean.csv")
data
data[1]
data[1,]
# Check for NAs
sapply(data, function(x) sum(is.na(x)))
names(data)
data <- read.csv("data/data_gender_abstract_year.csv")
names(data)
head(data)
# Check for NAs
sapply(data, function(x) sum(is.na(x)))
sapply(data, typeof)
# randomly sample 1000 rows & remove unnecessary columns
set.seed(830)
# randomly sample 1000 rows & remove unnecessary columns
set.seed(830)
data_sample <-data[sample(nrow(data), 1000), -c(3:4)]
# Double-check format
sapply(data_sample, typeof)
data_sample <-data[sample(nrow(data), 1000), -c(4:6)]
# Double-check format
sapply(data_sample, typeof)
# randomly sample 1000 rows & remove unnecessary columns
set.seed(830)
data_sample <-data[sample(nrow(data), 1000), -c(4:6)]
# Double-check format
sapply(data_sample, typeof)
data_sample[1,]
library(stm)
install.packages('stm')
library(stm)
plotRemoved(data_sample$ABSTRACT, lower.thresh = seq(1, 200, by = 100))
out <- prepDocuments(data_sample$ABSTRACT, data_sample$YEAR , lower.thresh = 15)
library(stm)
library(tm)
semilla = 420
set.seed(semilla)
data <- read.csv("data/data_gender/data_gender_abstract_year.csv")
#checks
names(data)
library(stm)
library(tm)
semilla = 420
set.seed(semilla)
data <- read.csv("data/data_gender/data_gender_abstract_year.csv")
#proprocesamiento
# data$full_name =paste(data$name, data$last_name)
#checks
names(data)
head(data)
sapply(data, function(x) sum(is.na(x))) # Check for NAs
sel_col = c('YEAR'  ,   'ABSTRACT', 'gender_final'  )
#sampling
paper_sample = nrow(data[data$YEAR == 2016,] )
data_sample = data[data$YEAR < 2016, sel_col]
for (i in seq(2016, 2022)){
data_i = data[data$YEAR == i, sel_col]
data_i = data_i[sample(nrow(data_i)  , paper_sample),]
data_sample = rbind(data_sample, data_i)
}
data_sample =data_sample[sample(nrow(data_sample)  , 1000),]
# Double-check format
sapply(data_sample, typeof)
data_sample[1,]
# * default parameters
processed <- textProcessor(data_sample$ABSTRACT, metadata = data_sample,
lowercase = TRUE, #*
removestopwords = TRUE, #*
removenumbers = TRUE, #*
removepunctuation = TRUE, #*
stem = FALSE, #*
wordLengths = c(3,Inf), #*
sparselevel = 1, #*
language = "en", #*
verbose = TRUE, #*
onlycharacter = FALSE, # not def
striphtml = FALSE, #*
customstopwords = NULL, #*
v1 = FALSE) #*
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
# docs <- out$documents
# vocab <- out$vocab
# meta <- out$meta
plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
# out <- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 15)
model_prev_lda <- stm(documents = out$documents, vocab = out$vocab,
K = 32,
prevalence = ~gender_final + s(YEAR) ,
# content = ~gender_final + s(YEAR) ,
# content = ~full_name,
max.em.its = 5, #75
data = out$meta, init.type = "LDA",
seed = semilla)
model_prev_spectral <- stm(documents = out$documents, vocab = out$vocab,
K = 0,
prevalence = ~gender_final + s(YEAR) ,
# content = ~gender_final + s(YEAR) ,
# content = ~full_name,
max.em.its = 5, #75
data = out$meta, init.type = "Spectral",
seed = semilla)
plot(model_prev_lda)
# towards data sci
# plotRemoved(data_sample$ABSTRACT, lower.thresh = seq(1, 200, by = 100))
# out <- prepDocuments(data_sample$ABSTRACT, data_sample$YEAR , lower.thresh = 15)
plot(model_prev_spectral)
labelTopics(model_prev_lda, c(6, 13, 18))
labelTopics(model_prev_lda, c(6, 13, 18),  type = "labels")
thoughts6 <- findThoughts(model_prev_lda, texts = shortdoc, n = 2, topics = 6)$docs[[1]]
thoughts6 <- findThoughts(model_prev_lda, n = 2, topics = 6)$docs[[1]]
thoughts18 <- findThoughts(model_prev_lda, n = 2, topics = 18)$docs[[1]]
par(mfrow = c(1, 2), mar = c(0.5, 0.5, 1, 0.5))
plotQuote(thoughts6, width = 30, main = "Topic 6")
plotQuote(thoughts18, width = 30, main = "Topic 18")
plot(model_prev_spectral, type = "summary", xlim = c(0, 0.3))
plot(model_prev_lda, type = "summary", xlim = c(0, 0.3))
plot(model_prev_lda, type = "summary", xlim = c(0, 0.3))
plot(model_prev_lda, type = "summary")
plot(model_prev_lda)
plot(model_prev_lda, type = "summary")
plot(model_prev_lda, type = "summary", xlim = c(2, 0.3))
plot(model_prev_lda, type = "summary", xlim = c(0, 0))
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
findThoughts(model_prev_lda, texts = meta$ABSTRACT,n = 3, topics = 1:15)
thoughts6 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 6)$docs[[1]]
thoughts18 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 18)$docs[[1]]
par(mfrow = c(1, 2), mar = c(0.5, 0.5, 1, 0.5))
plotQuote(thoughts6, width = 30, main = "Topic 6")
plotQuote(thoughts18, width = 30, main = "Topic 18")
# understand
out$meta$gender_final <- as.factor(out$meta$gender_final)
prep <- estimateEffect(1:20 ~ gender_final, model_prev_lda, meta = out$meta, uncertainty = "Global")
summary(prep, topics = 1)
plot(prep, covariate = "rating", topics = c(6, 13, 18),
model = poliblogPrevFit, method = "difference",
cov.value1 = "Liberal", cov.value2 = "Conservative", xlab = "More Conservative ... More Liberal", main = "Effect of Liberal vs. Conservative", xlim = c(-0.1, 0.1), labeltype = "custom",
custom.labels = c("Obama/McCain", "Sarah Palin", "Bush Presidency"))
# understand
## Estimating metadata/topic relationships
levels(meta$gender_final)
# plots
plot(model_prev_lda)
library(stm)
library(tm)
semilla = 420
set.seed(semilla)
data <- read.csv("data/data_gender/data_gender_abstract_year.csv")
#proprocesamiento
# data$full_name =paste(data$name, data$last_name)
#checks
names(data)
head(data)
sapply(data, function(x) sum(is.na(x))) # Check for NAs
sel_col = c('YEAR'  ,   'ABSTRACT', 'gender_final'  )
#sampling
paper_sample = nrow(data[data$YEAR == 2016,] )
data_sample = data[data$YEAR < 2016, sel_col]
for (i in seq(2016, 2022)){
data_i = data[data$YEAR == i, sel_col]
data_i = data_i[sample(nrow(data_i)  , paper_sample),]
data_sample = rbind(data_sample, data_i)
}
data_sample =data_sample[sample(nrow(data_sample)  , 1000),]
# Double-check format
sapply(data_sample, typeof)
data_sample[1,]
# * default parameters
processed <- textProcessor(data_sample$ABSTRACT, metadata = data_sample,
lowercase = TRUE, #*
removestopwords = TRUE, #*
removenumbers = TRUE, #*
removepunctuation = TRUE, #*
stem = FALSE, #*
wordLengths = c(3,Inf), #*
sparselevel = 1, #*
language = "en", #*
verbose = TRUE, #*
onlycharacter = FALSE, # not def
striphtml = FALSE, #*
customstopwords = NULL, #*
v1 = FALSE) #*
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
# out <- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 15)
model_prev_lda <- stm(documents = out$documents, vocab = out$vocab,
K = 32,
prevalence = ~gender_final + s(YEAR) ,
# content = ~gender_final + s(YEAR) ,
# content = ~full_name,
max.em.its = 5, #75
data = out$meta, init.type = "LDA",
seed = semilla)
# model_prev_spectral <- stm(documents = out$documents, vocab = out$vocab,
#                       K = 0,
#                       prevalence = ~gender_final + s(YEAR) ,
#                       # content = ~gender_final + s(YEAR) ,
#                       # content = ~full_name,
#                       max.em.its = 5, #75
#                       data = out$meta, init.type = "Spectral",
#                       seed = semilla)
# plots
plot(model_prev_lda)
plot(model_prev_lda, type = "summary", xlim = c(0, 0))
plot(model_prev_spectral)
labelTopics(model_prev_lda, c(6, 13, 18))
#explore
findThoughts(model_prev_lda, texts = meta$ABSTRACT,n = 3, topics = 1:15)
thoughts6 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 6)$docs[[1]]
thoughts18 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 18)$docs[[1]]
par(mfrow = c(1, 2), mar = c(0.5, 0.5, 1, 0.5))
plotQuote(thoughts6, width = 30, main = "Topic 6")
plotQuote(thoughts18, width = 30, main = "Topic 18")
# understand
## Estimating metadata/topic relationships
levels(meta$gender_final)
out$meta$gender_final <- as.factor(out$meta$gender_final)
prep <- estimateEffect(1:20 ~ gender_final, model_prev_lda, meta = out$meta, uncertainty = "Global")
summary(prep, topics = 1)
# ### Metadata/topic relationship visualization
# plot(prep, covariate = "gender_final", topics = c(6, 13, 18),
#      model = model_prev_lda, method = "difference",
#      cov.value1 = "Liberal", cov.value2 = "Conservative",
#      # cov.value1 = "Liberal", cov.value2 = "Conservative",
#      # xlab = "More Conservative ... More Liberal",
#      # main = "Effect of Liberal vs. Conservative",
#      # xlim = c(-0.1, 0.1), labeltype = "custom",
#      #  custom.labels = c("Obama/McCain", "Sarah Palin", "Bush Presidency")
#      )
# plots
plot(model_prev_lda)
plot(model_prev_lda, type = "summary", xlim = c(0, 0))
plot(model_prev_spectral)
# understand
## Estimating metadata/topic relationships
levels(meta$gender_final)
levels(data_sample$gender_final)
View(data_sample)
# ### Metadata/topic relationship visualization
plot(prep, covariate = "gender_final", topics = c(6, 13, 18),
model = model_prev_lda, method = "difference",
cov.value1 = "male", cov.value2 = "female",
# cov.value1 = "Liberal", cov.value2 = "Conservative",
# xlab = "More Conservative ... More Liberal",
# main = "Effect of Liberal vs. Conservative",
# xlim = c(-0.1, 0.1), labeltype = "custom",
#  custom.labels = c("Obama/McCain", "Sarah Palin", "Bush Presidency")
)
# ### Metadata/topic relationship visualization
plot(prep, covariate = "gender_final", topics = c(6, 13, 18),
model = model_prev_lda, method = "difference",
cov.value1 = "male", cov.value2 = "female",
# cov.value1 = "Liberal", cov.value2 = "Conservative",
# xlab = "More Conservative ... More Liberal",
# main = "Effect of Liberal vs. Conservative",
# xlim = c(-0.1, 0.1), labeltype = "custom",
#  custom.labels = c("Obama/McCain", "Sarah Palin", "Bush Presidency")
)
library(stm)
library(tm)
semilla = 420
set.seed(semilla)
data <- read.csv("data/data_gender/data_gender_abstract_year.csv")
#proprocesamiento
# data$full_name =paste(data$name, data$last_name)
#checks
names(data)
head(data)
sapply(data, function(x) sum(is.na(x))) # Check for NAs
sel_col = c('YEAR'  ,   'ABSTRACT', 'gender_final'  )
#sampling
paper_sample = nrow(data[data$YEAR == 2016,] )
data_sample = data[data$YEAR < 2016, sel_col]
levels(data_sample$gender_final)
for (i in seq(2016, 2022)){
data_i = data[data$YEAR == i, sel_col]
data_i = data_i[sample(nrow(data_i)  , paper_sample),]
data_sample = rbind(data_sample, data_i)
}
data_sample =data_sample[sample(nrow(data_sample)  , 1000),]
# Double-check format
sapply(data_sample, typeof)
data_sample[1,]
# * default parameters
processed <- textProcessor(data_sample$ABSTRACT, metadata = data_sample,
lowercase = TRUE, #*
removestopwords = TRUE, #*
removenumbers = TRUE, #*
removepunctuation = TRUE, #*
stem = FALSE, #*
wordLengths = c(3,Inf), #*
sparselevel = 1, #*
language = "en", #*
verbose = TRUE, #*
onlycharacter = FALSE, # not def
striphtml = FALSE, #*
customstopwords = NULL, #*
v1 = FALSE) #*
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
# out <- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 15)
model_prev_lda <- stm(documents = out$documents, vocab = out$vocab,
K = 32,
prevalence = ~gender_final + s(YEAR) ,
# content = ~gender_final + s(YEAR) ,
# content = ~full_name,
max.em.its = 5, #75
data = out$meta, init.type = "LDA",
seed = semilla)
# model_prev_spectral <- stm(documents = out$documents, vocab = out$vocab,
#                       K = 0,
#                       prevalence = ~gender_final + s(YEAR) ,
#                       # content = ~gender_final + s(YEAR) ,
#                       # content = ~full_name,
#                       max.em.its = 5, #75
#                       data = out$meta, init.type = "Spectral",
#                       seed = semilla)
# plots
plot(model_prev_lda)
plot(model_prev_lda, type = "summary", xlim = c(0, 0))
plot(model_prev_spectral)
labelTopics(model_prev_lda, c(6, 13, 18))
#explore
findThoughts(model_prev_lda, texts = meta$ABSTRACT,n = 3, topics = 1:15)
thoughts6 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 6)$docs[[1]]
thoughts18 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 18)$docs[[1]]
par(mfrow = c(1, 2), mar = c(0.5, 0.5, 1, 0.5))
plotQuote(thoughts6, width = 30, main = "Topic 6")
plotQuote(thoughts18, width = 30, main = "Topic 18")
# understand
## Estimating metadata/topic relationships
levels(meta$gender_final)
out$meta$gender_final <- as.factor(out$meta$gender_final)
prep <- estimateEffect(1:20 ~ gender_final, model_prev_lda, meta = out$meta, uncertainty = "Global")
summary(prep, topics = 1)
# ### Metadata/topic relationship visualization
plot(prep, covariate = "gender_final", topics = c(6, 13, 18),
model = model_prev_lda, method = "difference",
cov.value1 = "male", cov.value2 = "female",
# cov.value1 = "Liberal", cov.value2 = "Conservative",
# xlab = "More Conservative ... More Liberal",
# main = "Effect of Liberal vs. Conservative",
# xlim = c(-0.1, 0.1), labeltype = "custom",
#  custom.labels = c("Obama/McCain", "Sarah Palin", "Bush Presidency")
)
library(stm)
library(tm)
semilla = 420
set.seed(semilla)
data <- read.csv("data/data_gender/data_gender_abstract_year.csv")
#proprocesamiento
# data$full_name =paste(data$name, data$last_name)
#checks
names(data)
head(data)
sapply(data, function(x) sum(is.na(x))) # Check for NAs
sel_col = c('YEAR'  ,   'ABSTRACT', 'gender_final'  )
#sampling
paper_sample = nrow(data[data$YEAR == 2016,] )
data_sample = data[data$YEAR < 2016, sel_col]
levels(data_sample$gender_final)
for (i in seq(2016, 2022)){
data_i = data[data$YEAR == i, sel_col]
data_i = data_i[sample(nrow(data_i)  , paper_sample),]
data_sample = rbind(data_sample, data_i)
}
data_sample =data_sample[sample(nrow(data_sample)  , 1000),]
# Double-check format
sapply(data_sample, typeof)
data_sample[1,]
# * default parameters
processed <- textProcessor(data_sample$ABSTRACT, metadata = data_sample,
lowercase = TRUE, #*
removestopwords = TRUE, #*
removenumbers = TRUE, #*
removepunctuation = TRUE, #*
stem = FALSE, #*
wordLengths = c(3,Inf), #*
sparselevel = 1, #*
language = "en", #*
verbose = TRUE, #*
onlycharacter = FALSE, # not def
striphtml = FALSE, #*
customstopwords = NULL, #*
v1 = FALSE) #*
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
# out <- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 15)
model_prev_lda <- stm(documents = out$documents, vocab = out$vocab,
K = 32,
prevalence = ~gender_final + s(YEAR) ,
# content = ~gender_final + s(YEAR) ,
# content = ~full_name,
max.em.its = 5, #75
data = out$meta, init.type = "LDA",
seed = semilla)
# model_prev_spectral <- stm(documents = out$documents, vocab = out$vocab,
#                       K = 0,
#                       prevalence = ~gender_final + s(YEAR) ,
#                       # content = ~gender_final + s(YEAR) ,
#                       # content = ~full_name,
#                       max.em.its = 5, #75
#                       data = out$meta, init.type = "Spectral",
#                       seed = semilla)
# plots
plot(model_prev_lda)
plot(model_prev_lda, type = "summary", xlim = c(0, 0))
plot(model_prev_spectral)
labelTopics(model_prev_lda, c(6, 13, 18))
#explore
findThoughts(model_prev_lda, texts = meta$ABSTRACT,n = 3, topics = 1:15)
thoughts6 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 6)$docs[[1]]
thoughts18 <- findThoughts(model_prev_lda, meta$ABSTRACT, n = 2, topics = 18)$docs[[1]]
par(mfrow = c(1, 2), mar = c(0.5, 0.5, 1, 0.5))
plotQuote(thoughts6, width = 30, main = "Topic 6")
plotQuote(thoughts18, width = 30, main = "Topic 18")
# understand
## Estimating metadata/topic relationships
levels(meta$gender_final)
out$meta$gender_final <- as.factor(out$meta$gender_final)
prep <- estimateEffect(1:20 ~ gender_final, model_prev_lda, meta = out$meta, uncertainty = "Global")
summary(prep, topics = 1)
# ### Metadata/topic relationship visualization
plot(prep, covariate = "gender_final", topics = c(6, 13, 18),
model = model_prev_lda, method = "difference",
cov.value1 = "male", cov.value2 = "female",
# cov.value1 = "Liberal", cov.value2 = "Conservative",
# xlab = "More Conservative ... More Liberal",
# main = "Effect of Liberal vs. Conservative",
# xlim = c(-0.1, 0.1), labeltype = "custom",
#  custom.labels = c("Obama/McCain", "Sarah Palin", "Bush Presidency")
)
## Topical content
plot(model_prev_lda, type = "perspectives", topics = 10)
# plots
plot(model_prev_lda)
plot(model_prev_lda, type = "perspectives", topics = 10, xlim = c(0, 0.3)) ## Topical content
poliblogContent <- stm(out$documents, out$vocab, K = 20,
prevalence = ~gender_final + s(YEAR) ,
content =~  ~gender_final,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
STM_2 <- stm(out$documents, out$vocab, K = 20,
prevalence = ~gender_final + s(YEAR) ,
content =~  ~gender_final,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
plot(STM_2, type = "perspectives", topics = 10, xlim = c(0, 0.3)) ## Topical content
table(data$gender_final)
